[{"D:\\Web-development\\Twitter_React\\src\\index.js":"1","D:\\Web-development\\Twitter_React\\src\\reportWebVitals.js":"2","D:\\Web-development\\Twitter_React\\src\\hooks\\usePosts.js":"3","D:\\Web-development\\Twitter_React\\src\\App.jsx":"4","D:\\Web-development\\Twitter_React\\src\\api\\getData.js":"5","D:\\Web-development\\Twitter_React\\src\\components\\UserCard\\UserCard.jsx":"6","D:\\Web-development\\Twitter_React\\src\\components\\PostsList\\PostsList.jsx":"7","D:\\Web-development\\Twitter_React\\src\\components\\PostItem\\PostItem.jsx":"8","D:\\Web-development\\Twitter_React\\src\\components\\PostCard\\PostCard.jsx":"9","D:\\Web-development\\Twitter_React\\src\\api\\GetData.js":"10","D:\\Web-development\\Twitter_React\\src\\components\\Undefined\\NotFound.jsx":"11","D:\\Web-development\\Twitter_React\\src\\components\\CommentItem\\CommentItem.jsx":"12"},{"size":639,"mtime":1621803587165,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1619801656526,"results":"15","hashOfConfig":"14"},{"size":907,"mtime":1621743361179,"results":"16","hashOfConfig":"14"},{"size":1172,"mtime":1621804651501,"results":"17","hashOfConfig":"14"},{"size":252,"mtime":1621740410656,"results":"18","hashOfConfig":"14"},{"size":5440,"mtime":1621802995998,"results":"19","hashOfConfig":"14"},{"size":331,"mtime":1621716000435,"results":"20","hashOfConfig":"14"},{"size":1644,"mtime":1621801898860,"results":"21","hashOfConfig":"14"},{"size":1282,"mtime":1621794623565,"results":"22","hashOfConfig":"14"},{"size":252,"mtime":1621740410656,"results":"23","hashOfConfig":"14"},{"size":393,"mtime":1621783258880,"results":"24","hashOfConfig":"14"},{"size":1527,"mtime":1621783672080,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iueywt",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\Web-development\\Twitter_React\\src\\index.js",[],"D:\\Web-development\\Twitter_React\\src\\reportWebVitals.js",[],["54","55"],"D:\\Web-development\\Twitter_React\\src\\hooks\\usePosts.js",[],"D:\\Web-development\\Twitter_React\\src\\App.jsx",["56"],"D:\\Web-development\\Twitter_React\\src\\api\\getData.js",[],"D:\\Web-development\\Twitter_React\\src\\components\\UserCard\\UserCard.jsx",["57"],"import { MessageOutlined } from \"@ant-design/icons\";\r\nimport { Card, Input, List, Typography } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport getData from \"../../api/getData\";\r\n// import { usePosts } from \"../../hooks/usePosts\";\r\nimport { CardIcon } from \"../PostItem/PostItem\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function UserCard() {\r\n  // const { posts } = usePosts()\r\n  const { userId } = useParams();\r\n  const [user, setUser] = useState({});\r\n  const [userPosts, setUserPosts] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // if(userId) {\r\n    //   const postItem = posts.find(post => post.user?.id === +userId)\r\n    //   const postsOfUser = posts.filter(post => post.userId === +userId)\r\n    //   if(postItem) {\r\n    //     setUser(postItem.user)\r\n    //     setUserPosts(postsOfUser)\r\n    //   } else {\r\n    //     history.push('/404')\r\n    //   }\r\n\r\n    userId &&\r\n      getData(`http://jsonplaceholder.typicode.com/users/${userId}`, (data) =>\r\n        setUser(data)\r\n      );\r\n    userId &&\r\n      getData(\r\n        `http://jsonplaceholder.typicode.com/posts?userId=${userId}&_embed=comments`,\r\n        (data) => setUserPosts(data)\r\n      );\r\n  }, [userId]);\r\n\r\n  return (\r\n    <>\r\n      <Title level={3} className=\"user_title\">\r\n        UserCard\r\n      </Title>\r\n      <div className=\"user_description\">\r\n        {user.name && <Input addonBefore=\"Name\" value={user.name} readOnly />}\r\n        {user.username && (\r\n          <Input addonBefore=\"Username\" value={user.username} readOnly />\r\n        )}\r\n        {user.email && (\r\n          <Input addonBefore=\"Email\" value={user.email} readOnly />\r\n        )}\r\n        {user.website && (\r\n          <Input addonBefore=\"Website\" value={user.website} readOnly />\r\n        )}\r\n        {user.phone && (\r\n          <Input addonBefore=\"Phone\" value={user.phone} readOnly />\r\n        )}\r\n        {user.address && (\r\n          <div className=\"user_description_item\">\r\n            <Title level={5} className=\"user_description_item_title\">\r\n              Address:\r\n            </Title>\r\n            <div>\r\n              {user.address?.street && (\r\n                <Input\r\n                  addonBefore=\"Street\"\r\n                  value={user.address?.street}\r\n                  readOnly\r\n                />\r\n              )}\r\n              {user.address?.suite && (\r\n                <Input\r\n                  addonBefore=\"Suite\"\r\n                  value={user.address?.suite}\r\n                  readOnly\r\n                />\r\n              )}\r\n              {user.address?.city && (\r\n                <Input addonBefore=\"City\" value={user.address?.city} readOnly />\r\n              )}\r\n              {user.address?.zipcode && (\r\n                <Input\r\n                  addonBefore=\"Zipcode\"\r\n                  value={user.address?.zipcode}\r\n                  readOnly\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {user.address?.geo && (\r\n          <div className=\"user_description_item\">\r\n            <Title level={5} className=\"user_description_item_title\">\r\n              Geolocation:\r\n            </Title>\r\n            <div>\r\n              <Input\r\n                addonBefore=\"Latitude\"\r\n                value={user.address?.geo?.lat}\r\n                readOnly\r\n              />\r\n              <Input\r\n                addonBefore=\"Longitude\"\r\n                value={user.address?.geo?.lng}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {user.company && (\r\n          <div className=\"user_description_item\">\r\n            <Title level={5} className=\"user_description_item_title\">\r\n              Company:\r\n            </Title>\r\n            <div>\r\n              <Input addonBefore=\"Name\" value={user.company?.name} readOnly />\r\n              {user.company?.catchPhrase && (\r\n                <Input\r\n                  addonBefore=\"Catch Phrase\"\r\n                  value={user.company?.catchPhrase}\r\n                  readOnly\r\n                />\r\n              )}\r\n              {user.company?.bs && (\r\n                <Input addonBefore=\"Bs\" value={user.company?.bs} readOnly />\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {!!userPosts.length && (\r\n        <div className=\"user_posts\">\r\n          <Title level={4} className=\"user_posts_title\">\r\n            {user.name ? `Posts of ${user.name}` : \"Posts of user\"}:\r\n          </Title>\r\n          <List\r\n            className=\"user_posts_list\"\r\n            itemLayout=\"horizontal\"\r\n            dataSource={userPosts}\r\n            renderItem={(post) => (\r\n              <List.Item>\r\n                <Card\r\n                  className=\"user_posts_item\"\r\n                  type=\"inner\"\r\n                  title={post.title}\r\n                  extra={\r\n                    <Link to={`/post/${post?.id}`}>\r\n                      <CardIcon\r\n                        icon={<MessageOutlined />}\r\n                        text={post.comments?.length}\r\n                      />\r\n                    </Link>\r\n                  }\r\n                  hoverable={true}\r\n                >\r\n                  {post.body}\r\n                </Card>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","D:\\Web-development\\Twitter_React\\src\\components\\PostsList\\PostsList.jsx",[],"D:\\Web-development\\Twitter_React\\src\\components\\PostItem\\PostItem.jsx",["58"],"import { Avatar, Card, Space, Typography } from \"antd\";\r\nimport { AntDesignOutlined, EditOutlined, LikeOutlined, MessageOutlined } from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst { Meta } = Card;\r\nconst { Link, Paragraph, Title } = Typography;\r\n\r\nexport default function PostItem({ item }) {\r\n  const history = useHistory()\r\n  const [text, setText] = useState(item.body)\r\n\r\n  return (\r\n    <li className=\"post\">\r\n      <Card\r\n        title={\r\n            <>\r\n              \r\n              <Title level={5}>\r\n                <Link onClick={() => history.push(`/user/${item.user?.id}`)} >\r\n                  <Avatar icon={<AntDesignOutlined />} alt={item.user?.name} />\r\n                  {item.user?.name}\r\n                </Link>\r\n              </Title>\r\n            </>\r\n        }\r\n        actions={[\r\n          <LikeOutlined />,\r\n          // <EditOutlined key=\"edit\" />,\r\n          <Link onClick={() => history.push(`/post/${item.id}`)} >\r\n            <CardIcon icon={<MessageOutlined />} text={item.comments?.length} />\r\n          </Link>\r\n        ]}\r\n        hoverable={true}\r\n      >\r\n        <Meta\r\n          title={<Title level={5}>{item.title}</Title>}\r\n          description={\r\n            <Paragraph editable={{\r\n              tooltip: \"Edit the text\",\r\n              onChange: setText,\r\n            }}>\r\n              {text}\r\n            </Paragraph>\r\n          }\r\n        />\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport function CardIcon({ icon, text }) {\r\n  return (\r\n    <>\r\n      <Space>\r\n        {icon}\r\n        {text}\r\n      </Space>\r\n    </>\r\n  );\r\n}\r\n","D:\\Web-development\\Twitter_React\\src\\components\\PostCard\\PostCard.jsx",["59"],"import { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { usePosts } from \"../../hooks/usePosts\";\r\nimport { List, Typography } from \"antd\";\r\nimport CommentItem from \"../CommentItem/CommentItem\";\r\n\r\nconst { Title } = Typography\r\n\r\nexport default function PostCard() {\r\n  const { posts } = usePosts();\r\n  const { postId } = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (postId) {\r\n      const postItem = posts.find((post) => post.id === +postId);\r\n\r\n      if(postItem) {\r\n        setPost(postItem);\r\n        setComments(postItem.comments);\r\n      } else {\r\n        history.push('/404')\r\n      }\r\n      \r\n    }\r\n  }, [postId]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post_card\">\r\n        <Title level={5}>{post.title}</Title>\r\n      </div>\r\n      <div className=\"post_comments\">\r\n        <Title level={5}>Comments of Post:</Title>\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={comments}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <CommentItem comment={item} />\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\Web-development\\Twitter_React\\src\\api\\GetData.js",[],"D:\\Web-development\\Twitter_React\\src\\components\\Undefined\\NotFound.jsx",[],"D:\\Web-development\\Twitter_React\\src\\components\\CommentItem\\CommentItem.jsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":9,"column":20,"nodeType":"66","messageId":"67","endLine":9,"endColumn":38},{"ruleId":"64","severity":1,"message":"68","line":17,"column":9,"nodeType":"66","messageId":"67","endLine":17,"endColumn":16},{"ruleId":"64","severity":1,"message":"69","line":2,"column":29,"nodeType":"66","messageId":"67","endLine":2,"endColumn":41},{"ruleId":"70","severity":1,"message":"71","line":28,"column":6,"nodeType":"72","endLine":28,"endColumn":14,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'presetDarkPalettes' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'EditOutlined' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'posts'. Either include them or remove the dependency array.","ArrayExpression",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [history, postId, posts]",{"range":"79","text":"80"},[788,796],"[history, postId, posts]"]